<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Gems | Aschenblog]]></title>
  <link href="http://nick-aschenbach.github.io/blog/categories/gems/atom.xml" rel="self"/>
  <link href="http://nick-aschenbach.github.io/"/>
  <updated>2015-12-22T11:39:58-08:00</updated>
  <id>http://nick-aschenbach.github.io/</id>
  <author>
    <name><![CDATA[Nick Aschenbach]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Let It Snow With the Accuweather Gem]]></title>
    <link href="http://nick-aschenbach.github.io/blog/2015/12/08/let-it-snow-with-accuweather-gem/"/>
    <updated>2015-12-08T22:09:29-08:00</updated>
    <id>http://nick-aschenbach.github.io/blog/2015/12/08/let-it-snow-with-accuweather-gem</id>
    <content type="html"><![CDATA[AccuWeather is one of the standard widgets on my Android phone. I found no API wrapper for it after
searching [rubygems.org](https://rubygems.org) and I thought it would be fun to write one after spending a little time
reverse engineering the web API ([related post](/blog/2015/10/15/reverse-engineering-web-apis-using-mobile-apps/)).

<img class="left" src="/assets/2015-12-08-let-it-snow-with-accuweather/images/accuweather.png" width="250" title="auto" >

First, find a location via the city search API:

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="nb">require</span> <span class="s1">&#39;accuweather&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">locations</span> <span class="o">=</span> <span class="no">Accuweather</span><span class="o">.</span><span class="n">city_search</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s1">&#39;vancouver&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

This returns a list of locations that match the input. Each location provides several pieces of information including
a city identifier:

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">vancouver</span> <span class="o">=</span> <span class="n">locations</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'>
</span><span class='line'><span class="n">vancouver</span><span class="o">.</span><span class="n">id</span>        <span class="c1"># =&gt; &amp;#8216;cityId:53286&amp;#8217;</span>
</span><span class='line'><span class="n">vancouver</span><span class="o">.</span><span class="n">city</span>      <span class="c1"># =&gt; &amp;#8216;Vancouver&amp;#8217;</span>
</span><span class='line'><span class="n">vancouver</span><span class="o">.</span><span class="n">state</span>     <span class="c1"># =&gt; &amp;#8216;Canada (British Columbia)&amp;#8217;</span>
</span><span class='line'><span class="n">vancouver</span><span class="o">.</span><span class="n">latitude</span>  <span class="c1"># =&gt; &amp;#8216;49.2448&amp;#8217;</span>
</span><span class='line'><span class="n">vancouver</span><span class="o">.</span><span class="n">longitude</span> <span class="c1"># =&gt; &amp;#8216;123.1154&amp;#8217;</span>
</span></code></pre></td></tr></table></div></figure>

The gem caches over 175K cities around the world. If the location `name` is not in the cache, the gem will
make a HTTP request to AccuWeather to try and find it.

The location identifier is used to get more information about current weather conditions:

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">current_weather</span> <span class="o">=</span> <span class="no">Accuweather</span><span class="o">.</span><span class="n">get_conditions</span><span class="p">(</span><span class="ss">location_id</span><span class="p">:</span> <span class="o">&amp;</span><span class="c1">#8216;cityId:53286&amp;#8217;).current</span>
</span><span class='line'><span class="n">current_weather</span><span class="o">.</span><span class="n">temperature</span>    <span class="c1"># =&gt; &amp;#8216;41&amp;#8217;</span>
</span><span class='line'><span class="n">current_weather</span><span class="o">.</span><span class="n">weather_text</span>   <span class="c1"># =&gt; &amp;#8216;Partly Sunny&amp;#8217;</span>
</span><span class='line'><span class="n">current_weather</span><span class="o">.</span><span class="n">pressure</span>       <span class="c1"># =&gt; &amp;#8216;30.35&amp;#8217;</span>
</span><span class='line'><span class="n">current_weather</span><span class="o">.</span><span class="n">humidity</span>       <span class="c1"># =&gt; &amp;#8216;43%&amp;#8217;</span>
</span><span class='line'><span class="n">current_weather</span><span class="o">.</span><span class="n">cloud_cover</span>    <span class="c1"># =&gt; &amp;#8216;40%&amp;#8217;</span>
</span></code></pre></td></tr></table></div></figure>

A week of day and nighttime forecasts are available:

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">weather_forecast</span> <span class="o">=</span> <span class="no">Accuweather</span><span class="o">.</span><span class="n">get_conditions</span><span class="p">(</span><span class="ss">location_id</span><span class="p">:</span> <span class="o">&amp;</span><span class="c1">#8216;cityId:53286&amp;#8217;).forecast</span>
</span><span class='line'><span class="n">last_forecast_day</span> <span class="o">=</span> <span class="n">weather_forecast</span><span class="o">.</span><span class="n">last</span>
</span><span class='line'><span class="n">last_forecast_day</span><span class="o">.</span><span class="n">date</span>        <span class="c1"># =&gt; &amp;#8220;12/3/2015&amp;#8221;</span>
</span><span class='line'><span class="n">last_forecast_day</span><span class="o">.</span><span class="n">day_of_week</span> <span class="c1"># =&gt; &amp;#8220;Thursday&amp;#8221;</span>
</span><span class='line'><span class="n">last_forecast_day</span><span class="o">.</span><span class="n">sunrise</span>     <span class="c1"># =&gt; &amp;#8220;7:49 AM&amp;#8221;</span>
</span><span class='line'><span class="n">last_forecast_day</span><span class="o">.</span><span class="n">sunset</span>      <span class="c1"># =&gt; &amp;#8220;4:16 PM&amp;#8221;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Get the dates, daytime high and nighttime low temperatures</span>
</span><span class='line'><span class="n">weather_forecast</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:date</span><span class="p">)</span>                             <span class="c1">#  =&gt; [&amp;#8220;11/27/2015&amp;#8221;, &amp;#8220;11/28/2015&amp;#8221;, &amp;#8220;11/29/2015&amp;#8221;, &amp;#8220;11/30/2015&amp;#8221;, &amp;#8220;12/1/2015&amp;#8221;, &amp;#8220;12/2/2015&amp;#8221;, &amp;#8220;12/3/2015&amp;#8221;]</span>
</span><span class='line'><span class="n">weather_forecast</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:daytime</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:high_temperature</span><span class="p">)</span>  <span class="c1"># =&gt; [&amp;#8220;45&amp;#8221;, &amp;#8220;45&amp;#8221;, &amp;#8220;47&amp;#8221;, &amp;#8220;44&amp;#8221;, &amp;#8220;44&amp;#8221;, &amp;#8220;48&amp;#8221;, &amp;#8220;48&amp;#8221;]</span>
</span><span class='line'><span class="n">weather_forecast</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:nighttime</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:low_temperature</span><span class="p">)</span> <span class="c1"># =&gt; [&amp;#8220;27&amp;#8221;, &amp;#8220;28&amp;#8221;, &amp;#8220;31&amp;#8221;, &amp;#8220;32&amp;#8221;, &amp;#8220;40&amp;#8221;, &amp;#8220;42&amp;#8221;, &amp;#8220;36&amp;#8221;]</span>
</span></code></pre></td></tr></table></div></figure>

The API returns a `weather_icon` number for the current weather and forecast. This number appears to correspond to PNG
file from AccuWeather.com. I downloaded the full set of PNG files and included them here, but found a handful of better
looking weather webfonts out there (links below).

Related resources:

- Full accuweather icon set ([download ZIP](/assets/2015-12-08-let-it-snow-with-accuweather/images/accuweather_icons.zip))
- [Weather Icons](https://erikflowers.github.io/weather-icons/)
- [Meteocons](http://www.alessioatzeni.com/meteocons/)

Accuweather gem links:

- [Source code](https://github.com/nick-aschenbach/accuweather)
- [RubyGems.org Link](https://rubygems.org/gems/accuweather)

Stay warm out there and have fun!]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Renumber Filenames Sequentially]]></title>
    <link href="http://nick-aschenbach.github.io/blog/2015/06/17/renumber-gem/"/>
    <updated>2015-06-17T20:07:04-07:00</updated>
    <id>http://nick-aschenbach.github.io/blog/2015/06/17/renumber-gem</id>
    <content type="html"><![CDATA[`renumber` is a small command line utility that renames files in a single directory. Files are sorted in
lexicographic order and then renamed with sequential numbers. It is possible to specify a prefix and suffix - these are
optional parameters. There are a couple of examples of usage below.

The code is open source and available on [GitHub](https://github.com/nick-aschenbach/renumber).

**Command Line Usage**

    $ renumber <directory> <prefix> <suffix>

<!-- more -->

**Installation**

The tool requires that Ruby is installed. If so, install `renumber` with the following command:

    $ gem install renumber

**Use case**

I developed `renumber` so that I could renumber thousands images from a digital camera for use in a time lapse movie.
The tool I used to stitch these images together into a movie (called [ffmpeg](https://www.ffmpeg.org/)) died if the file
names had a gap (e.g. &#8230;, IMG2047, IMG2049, IMG2050, &#8230;).

The `renumber` tool solved this problem by renumbering the files to not have gaps.

**Simple Usage**

Let&#8217;s take a directory with several non-sequential files:

&#8220;`
drwxr-xr-x  15 troy  staff  510 Jun 17 20:12 .
drwx&#8212;&#8212;+  7 troy  staff  238 Jun 17 20:06 ..
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 03.txt
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 04.txt
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 07.txt
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 09.txt
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 10.txt
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 11.txt
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 13.txt
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 15.txt
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 17.txt
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 19.txt
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 20.txt
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 22.txt
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 99.txt
&#8220;`

Let&#8217;s change to that directory and run the following:

    $ renumber .

Here&#8217;s the directory listing after running the command:

&#8220;`
drwxr-xr-x  15 troy  staff  510 Jun 17 20:14 .
drwx&#8212;&#8212;+  7 troy  staff  238 Jun 17 20:06 ..
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 00
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 01
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 02
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 03
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 04
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 05
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 06
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 07
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 08
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 09
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 10
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 11
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 12
&#8220;`

**Prefix and Suffix**

Let&#8217;s take the same initial file list as the above example. Let&#8217;s add a prefix and suffix:

    $ renumber . foo .text

Here&#8217;s the directory listing after running the command:

&#8220;`
drwxr-xr-x  15 troy  staff  510 Jun 17 20:17 .
drwx&#8212;&#8212;+  7 troy  staff  238 Jun 17 20:06 ..
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:16 foo00.text
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:16 foo01.text
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:16 foo02.text
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:16 foo03.text
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:16 foo04.text
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:16 foo05.text
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:16 foo06.text
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:16 foo07.text
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:16 foo08.text
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:16 foo09.text
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:16 foo10.text
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:16 foo11.text
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:16 foo12.text
&#8220;`]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Freebase Astronomy Gems]]></title>
    <link href="http://nick-aschenbach.github.io/blog/2015/01/29/freebase-astronomy-gem/"/>
    <updated>2015-01-29T20:34:04-08:00</updated>
    <id>http://nick-aschenbach.github.io/blog/2015/01/29/freebase-astronomy-gem</id>
    <content type="html"><![CDATA[With 47 million topics and 2.7 billion facts, Freebase has an imposing amount of community curated data.
Unfortunately, they are [closing up shop](https://plus.google.com/109936836907132434202/posts/bu3z2wVqcQc) by mid 2015.
Their plan is to help support the up and coming Wikimedia Foundation's project [Wikidata](http://www.wikidata.org/) by
assisting in transferring their data to this project. Given the short amount of time they are online, I wanted
to do a small project using their data sets.

I am interested in astronomy, but found the Freebase JSON data a little unwieldy. I decided to write a pair gems:

- The `astronomy` gem facilitates browsing and search of astronomical phenomena. Each topic includes a name,
description, an array of image URLs and a link to the original detailed Freebase data via Google APIs.
- The `astronomy_engine` wraps the `astronomy` gem and has a web interface and can easily be included
in a Rails project:

[<img src="/assets/2015-01-29-freebase-astronomy-gem/images/astronomy_engine.jpg" title="auto auto" >](/assets/2015-01-29-freebase-astronomy-gem/images/astronomy_engine.jpg)

<!-- more -->

Add the following to your `config/routes.rb` in your rails app:

&#8220;`ruby
Rails.application.routes.draw do
  mount AstronomyEngine::App => &#8216;/astronomy&#8217;
&#8220;`

This adds the web page at the root and adds a few additional routes.

Request the list of categories:

&#8220;`bash
curl {APPLICATION_ROOT}/astronomy/categories
&#8220;`

Request all topics for a given category:

&#8220;`bash
curl {APPLICATION_ROOT}/astronomy/categories/Star/topics
&#8220;`

Search all topic names and descriptions:

&#8220;`bash
curl {APPLICATION_ROOT}/astronomy/topics?q=cluster
&#8220;`

I have a [sample web app](http://astronomy-engine.herokuapp.com/) on Heroku available if you want to take a look.
Here are the Github pages for the [astronomy](https://github.com/nick-aschenbach/astronomy) gem and
[astronomy_engine](https://github.com/nick-aschenbach/astronomy-engine) gem.

Resources:

- Amazon makes a handful of [Freebase Data Dumps](https://aws.amazon.com/search?searchQuery=freebase) freely available.
Also they several other [public data sets](https://aws.amazon.com/datasets/).
- Wikidata [data dumps](http://dumps.wikimedia.org/) are also available.]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Game Time]]></title>
    <link href="http://nick-aschenbach.github.io/blog/2014/11/26/game-time/"/>
    <updated>2014-11-26T11:09:34-08:00</updated>
    <id>http://nick-aschenbach.github.io/blog/2014/11/26/game-time</id>
    <content type="html"><![CDATA[My team laughed quite a bit recently while playing Pictionary at lunchtime over the past several weeks. We have had a few HR (not safe for work) fails in addition to several entertaining missed phrases (including `Pizza Gazebo` instead of `Pizza Hut`). We use tablets as our drawing surfaces to save paper, which introduces challenges when trying to draw rapidly. To find words, we used the [Game Gal's word generator](https://www.thegamegal.com/word-generator/).
 
I love words and decided to look at the word generator implementation to see if I could see if I could use their API to get categorized word lists. I used Chrome's POSTman tool to issue GET requests to the following URL:

<!-- more -->

&#8220;`
https://www.thegamegal.com/wordgenerator/generator.php?game=2&category=6
&#8220;`

The `2` is pictionary and `6` is for the easy category. See the `generator.js` file or look at the word generator DOM for more details. 

I decided to compile a complete list of all words, phrases, actions, characters, movies, songs, etc from the site into a tool that others can use. The GameWords gem was born ([Github](https://github.com/nick-aschenbach/game-words), [RubyGems](http://rubygems.org/gems/game_words)). This tool is both a Ruby library and has a command line interface. Below we will investigate the command line tool options:

To install the GameWords gem (which requires Ruby) from a terminal:

&#8220;`
$ gem install game_words
&#8220;`

Running the command with no options will show the help:

&#8220;`
$ gamewords
Usage: gamewords [options] game [category]
    -l, &#8211;list                       List games
    -c, &#8211;categories GAME            List categories for a GAME
    -r, &#8211;random                     Show one random word or phrase for a GAME [CATEGORY]
    -v, &#8211;version                    Show the version
    -h, &#8211;help                       Display help screen
&#8220;`

To find a Pictionary word for all categories:

&#8220;`
$ gamewords pictionary
&#8220;`

Show all words for a specific game category:

&#8220;`
$ gamewords catchphrase people
&#8220;`

Show a list of games with the `-l` option:

&#8220;`
$ gamewords -l
&#8220;`

Show a list of categories for a game via the `-c` option:

&#8220;`
$ gamewords -c pictionary
&#8220;`

Show a single random word or phrase use the `-r` option:

&#8220;`
$ gamewords -r charades actions
&#8220;`

The holidays are a great chance to catch up with family and close friends. If you like word games perhaps this library can provide some incentive to either play or write your own word games. There are almost 5,000 words, phrases, songs, movies, characters, actions and sayings.

Happy Holidays!]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Building a Gem for RubyGems.org]]></title>
    <link href="http://nick-aschenbach.github.io/blog/2014/09/29/building-a-gem-for-rubygems-dot-org/"/>
    <updated>2014-09-29T18:49:06-07:00</updated>
    <id>http://nick-aschenbach.github.io/blog/2014/09/29/building-a-gem-for-rubygems-dot-org</id>
    <content type="html"><![CDATA[We are going through some large code refactors at work and are building [rails engines](http://guides.rubyonrails.org/engines.html). This requires creating apps within our main app. Each sub-app resides in its own gem and is typically mounted or consumed in some way by the host application. While I work on several gems for different projects at work, I had never developed one from scratch and submitted it to [RubyGems](http://rubygems.org/). I took some previous work on a [SMS Scrabble cheater app](/blog/2014/07/20/text-messaging-made-easy-with-twilio/) to help motivate the project. 

Developing the skeleton for a gem is extremely easy:

<!-- more -->

&#8220;`
bundle gem foobar
&#8220;`

Several files are created:

&#8220;`
create  foobar/Rakefile
create  foobar/LICENSE.txt
create  foobar/README.md
create  foobar/.gitignore
create  foobar/foobar.gemspec
create  foobar/lib/foobar.rb
create  foobar/lib/foobar/version.rb
Initializing git repo in /Users/sela/workspace/foobar
&#8220;`

Let&#8217;s take a look at the gemspec file:

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="c1"># coding: utf-8</span>
</span><span class='line'><span class="n">lib</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">expand_path</span><span class="p">(</span><span class="o">&amp;</span><span class="c1">#8216;../lib&amp;#8217;, __FILE__)</span>
</span><span class='line'><span class="vg">$LOAD_PATH</span><span class="o">.</span><span class="n">unshift</span><span class="p">(</span><span class="n">lib</span><span class="p">)</span> <span class="k">unless</span> <span class="vg">$LOAD_PATH</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="n">lib</span><span class="p">)</span>
</span><span class='line'><span class="nb">require</span> <span class="o">&amp;</span><span class="c1">#8216;foobar/version&amp;#8217;</span>
</span><span class='line'>
</span><span class='line'><span class="no">Gem</span><span class="o">::</span><span class="no">Specification</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span> <span class="o">|</span><span class="n">spec</span><span class="o">|</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">name</span>          <span class="o">=</span> <span class="o">&amp;</span><span class="c1">#8220;foobar&amp;#8221;</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">version</span>       <span class="o">=</span> <span class="no">Foobar</span><span class="o">::</span><span class="no">VERSION</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">authors</span>       <span class="o">=</span> <span class="o">[&amp;</span><span class="c1">#8220;Nick Aschenbach&amp;#8221;]</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">email</span>         <span class="o">=</span> <span class="o">[&amp;</span><span class="c1">#8220;nick.aschenbach@gmail.com&amp;#8221;]</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">summary</span>       <span class="o">=</span> <span class="sx">%q{TODO: Write a short summary. Required.}</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">description</span>   <span class="o">=</span> <span class="sx">%q{TODO: Write a longer description. Optional.}</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">homepage</span>      <span class="o">=</span> <span class="o">&amp;</span><span class="c1">#8220;&amp;#8221;</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">license</span>       <span class="o">=</span> <span class="o">&amp;</span><span class="c1">#8220;MIT&amp;#8221;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">files</span>         <span class="o">=</span> <span class="sb">`git ls-files -z`</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="o">&amp;</span><span class="c1">#8220;\x0&amp;#8221;)</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">executables</span>   <span class="o">=</span> <span class="n">spec</span><span class="o">.</span><span class="n">files</span><span class="o">.</span><span class="n">grep</span><span class="p">(</span><span class="sr">%r{^bin/}</span><span class="p">)</span> <span class="p">{</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="no">File</span><span class="o">.</span><span class="n">basename</span><span class="p">(</span><span class="n">f</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">test_files</span>    <span class="o">=</span> <span class="n">spec</span><span class="o">.</span><span class="n">files</span><span class="o">.</span><span class="n">grep</span><span class="p">(</span><span class="sr">%r{^(test|spec|features)/}</span><span class="p">)</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">require_paths</span> <span class="o">=</span> <span class="o">[&amp;</span><span class="c1">#8220;lib&amp;#8221;]</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">add_development_dependency</span> <span class="o">&amp;</span><span class="c1">#8220;bundler&amp;#8221;, &amp;#8220;~&gt; 1.6&amp;#8221;</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">add_development_dependency</span> <span class="o">&amp;</span><span class="c1">#8220;rake&amp;#8221;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

Also a handy `README.md` file is created that shows users how to install the gem using bundler. 

&#8220;`
TODO: Write a gem description

## Installation

Add this line to your application&#8217;s Gemfile:

    gem &#8216;foobar&#8217;

And then execute:

    $ bundle

Or install it yourself as:

    $ gem install foobar

## Usage

TODO: Write usage instructions here

## Contributing

1. Fork it ( https://github.com/[my-github-username]/foobar/fork )
2. Create your feature branch (`git checkout -b my-new-feature`)
3. Commit your changes (`git commit -am &#8216;Add some feature&#8217;`)
4. Push to the branch (`git push origin my-new-feature`)
5. Create a new Pull Request
&#8220;`

I used this template for my `scrabble_score` gem. The full source code is available on [Github](https://github.com/nick-aschenbach/scrabble-score). The project is extremely simple and has the following structure:

&#8220;`
.
├── Gemfile
├── Gemfile.lock
├── LICENSE.txt
├── README.md
├── assets
│   └── dictionary.txt
├── lib
│   ├── scrabble_score
│   │   ├── dictionary.rb
│   │   ├── letters.rb
│   │   ├── version.rb
│   │   └── word_finder.rb
│   └── scrabble_score.rb
├── scrabble_score.gemspec
└── spec
    ├── assets
    │   └── dictionary.txt
    ├── lib
    │   └── scrabble_score
    │       ├── dictionary_spec.rb
    │       ├── letters_spec.rb
    │       └── word_finder_spec.rb
    └── spec_helper.rb

7 directories, 16 files
&#8220;`

After getting my specs green and playing around with the code a bit, I went to generate the gem. First, let&#8217;s upgrade to the latest RubyGems version:

&#8220;`
gem update &#8211;system
&#8220;`

Now, let&#8217;s build the gem:

&#8220;`
gem build scrabble_score.gemspec
&#8220;`

The first time I ran this tool I received a handful of warnings:

&#8220;`
WARNING:  no homepage specified
WARNING:  open-ended dependency on rspec (>= 0, development) is not recommended
  if rspec is semantically versioned, use:
    add_development_dependency &#8216;rspec&#8217;, &#8216;~> 0&#8217;
WARNING:  open-ended dependency on simplecov (>= 0, development) is not recommended
  if simplecov is semantically versioned, use:
    add_development_dependency &#8216;simplecov&#8217;, &#8216;~> 0&#8217;
WARNING:  See http://guides.rubygems.org/specification-reference/ for help
  Successfully built RubyGem
  Name: scrabble_score
  Version: 0.1.0
  File: scrabble_score-0.1.0.gem
&#8220;`

For the homepage I used the project&#8217;s Github repository. I also added versions to the development dependencies:

&#8220;`
spec.add_development_dependency &#8216;bundler&#8217;, &#8216;~> 1.6&#8217;
spec.add_development_dependency &#8216;rspec&#8217;, &#8216;3.0.0&#8217;
spec.add_development_dependency &#8216;simplecov&#8217;, &#8216;0.9.1&#8217;
&#8220;`

I deleted the `scrabble_score-0.1.0.gem` file and ran the `gem build` command again. Here is the output:

&#8220;`
  Successfully built RubyGem
  Name: scrabble_score
  Version: 0.1.0
  File: scrabble_score-0.1.0.gem
&#8220;`

Everything looks good, so I proceeded with the last step by running:

&#8220;`
gem push scrabble_score-0.1.0.gem 
&#8220;`

Which created the following output:

&#8220;`
Enter your RubyGems.org credentials.
Don&#8217;t have an account yet? Create one at https://rubygems.org/sign_up
   Email:   nick.aschenbach@gmail.com
Password:   

Signed in.
Pushing gem to https://rubygems.org&#8230;
Successfully registered gem: scrabble_score (0.1.0)
&#8220;`

My experience creating a gem for RubyGems was a pleasant one. Please do a quick search to ensure that your gem name is unique before you get started. There are many guides out there for how to write gems. It is a good idea to take a look at one or two of these before getting started.

Happy gem cutting!
]]></content>
  </entry>
  
</feed>

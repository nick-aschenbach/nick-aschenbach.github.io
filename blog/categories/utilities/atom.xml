<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Utilities | Aschenblog]]></title>
  <link href="http://nick-aschenbach.github.io/blog/categories/utilities/atom.xml" rel="self"/>
  <link href="http://nick-aschenbach.github.io/"/>
  <updated>2015-12-09T00:00:10-08:00</updated>
  <id>http://nick-aschenbach.github.io/</id>
  <author>
    <name><![CDATA[Nick Aschenbach]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Let It Snow With the Accuweather Gem]]></title>
    <link href="http://nick-aschenbach.github.io/blog/2015/12/08/let-it-snow-with-accuweather-gem/"/>
    <updated>2015-12-08T22:09:29-08:00</updated>
    <id>http://nick-aschenbach.github.io/blog/2015/12/08/let-it-snow-with-accuweather-gem</id>
    <content type="html"><![CDATA[AccuWeather is one of the standard widgets on my Android phone. I found no API wrapper for it after
searching [rubygems.org](https://rubygems.org) and I thought it would be fun to write one after spending a little time
reverse engineering the web API ([related post](/blog/2015/10/15/reverse-engineering-web-apis-using-mobile-apps/)).

<img class="left" src="/assets/2015-12-08-let-it-snow-with-accuweather/images/accuweather.png" width="250" title="auto" >

First, find a location via the city search API:

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="nb">require</span> <span class="s1">&#39;accuweather&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">locations</span> <span class="o">=</span> <span class="no">Accuweather</span><span class="o">.</span><span class="n">city_search</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s1">&#39;vancouver&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

This returns a list of locations that match the input. Each location provides several pieces of information including
a city identifier:

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">vancouver</span> <span class="o">=</span> <span class="n">locations</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'>
</span><span class='line'><span class="n">vancouver</span><span class="o">.</span><span class="n">id</span>        <span class="c1"># =&gt; &amp;#8216;cityId:53286&amp;#8217;</span>
</span><span class='line'><span class="n">vancouver</span><span class="o">.</span><span class="n">city</span>      <span class="c1"># =&gt; &amp;#8216;Vancouver&amp;#8217;</span>
</span><span class='line'><span class="n">vancouver</span><span class="o">.</span><span class="n">state</span>     <span class="c1"># =&gt; &amp;#8216;Canada (British Columbia)&amp;#8217;</span>
</span><span class='line'><span class="n">vancouver</span><span class="o">.</span><span class="n">latitude</span>  <span class="c1"># =&gt; &amp;#8216;49.2448&amp;#8217;</span>
</span><span class='line'><span class="n">vancouver</span><span class="o">.</span><span class="n">longitude</span> <span class="c1"># =&gt; &amp;#8216;123.1154&amp;#8217;</span>
</span></code></pre></td></tr></table></div></figure>

The gem caches over 175K cities around the world. If the location `name` is not in the cache, the gem will
make a HTTP request to AccuWeather to try and find it.

The location identifier is used to get more information about current weather conditions:

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">current_weather</span> <span class="o">=</span> <span class="no">Accuweather</span><span class="o">.</span><span class="n">get_conditions</span><span class="p">(</span><span class="ss">location_id</span><span class="p">:</span> <span class="o">&amp;</span><span class="c1">#8216;cityId:53286&amp;#8217;).current</span>
</span><span class='line'><span class="n">current_weather</span><span class="o">.</span><span class="n">temperature</span>    <span class="c1"># =&gt; &amp;#8216;41&amp;#8217;</span>
</span><span class='line'><span class="n">current_weather</span><span class="o">.</span><span class="n">weather_text</span>   <span class="c1"># =&gt; &amp;#8216;Partly Sunny&amp;#8217;</span>
</span><span class='line'><span class="n">current_weather</span><span class="o">.</span><span class="n">pressure</span>       <span class="c1"># =&gt; &amp;#8216;30.35&amp;#8217;</span>
</span><span class='line'><span class="n">current_weather</span><span class="o">.</span><span class="n">humidity</span>       <span class="c1"># =&gt; &amp;#8216;43%&amp;#8217;</span>
</span><span class='line'><span class="n">current_weather</span><span class="o">.</span><span class="n">cloud_cover</span>    <span class="c1"># =&gt; &amp;#8216;40%&amp;#8217;</span>
</span></code></pre></td></tr></table></div></figure>

A week of day and nighttime forecasts are available:

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">weather_forecast</span> <span class="o">=</span> <span class="no">Accuweather</span><span class="o">.</span><span class="n">get_conditions</span><span class="p">(</span><span class="ss">location_id</span><span class="p">:</span> <span class="o">&amp;</span><span class="c1">#8216;cityId:53286&amp;#8217;).forecast</span>
</span><span class='line'><span class="n">last_forecast_day</span> <span class="o">=</span> <span class="n">weather_forecast</span><span class="o">.</span><span class="n">last</span>
</span><span class='line'><span class="n">last_forecast_day</span><span class="o">.</span><span class="n">date</span>        <span class="c1"># =&gt; &amp;#8220;12/3/2015&amp;#8221;</span>
</span><span class='line'><span class="n">last_forecast_day</span><span class="o">.</span><span class="n">day_of_week</span> <span class="c1"># =&gt; &amp;#8220;Thursday&amp;#8221;</span>
</span><span class='line'><span class="n">last_forecast_day</span><span class="o">.</span><span class="n">sunrise</span>     <span class="c1"># =&gt; &amp;#8220;7:49 AM&amp;#8221;</span>
</span><span class='line'><span class="n">last_forecast_day</span><span class="o">.</span><span class="n">sunset</span>      <span class="c1"># =&gt; &amp;#8220;4:16 PM&amp;#8221;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Get the dates, daytime high and nighttime low temperatures</span>
</span><span class='line'><span class="n">weather_forecast</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:date</span><span class="p">)</span>                             <span class="c1">#  =&gt; [&amp;#8220;11/27/2015&amp;#8221;, &amp;#8220;11/28/2015&amp;#8221;, &amp;#8220;11/29/2015&amp;#8221;, &amp;#8220;11/30/2015&amp;#8221;, &amp;#8220;12/1/2015&amp;#8221;, &amp;#8220;12/2/2015&amp;#8221;, &amp;#8220;12/3/2015&amp;#8221;]</span>
</span><span class='line'><span class="n">weather_forecast</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:daytime</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:high_temperature</span><span class="p">)</span>  <span class="c1"># =&gt; [&amp;#8220;45&amp;#8221;, &amp;#8220;45&amp;#8221;, &amp;#8220;47&amp;#8221;, &amp;#8220;44&amp;#8221;, &amp;#8220;44&amp;#8221;, &amp;#8220;48&amp;#8221;, &amp;#8220;48&amp;#8221;]</span>
</span><span class='line'><span class="n">weather_forecast</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:nighttime</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:low_temperature</span><span class="p">)</span> <span class="c1"># =&gt; [&amp;#8220;27&amp;#8221;, &amp;#8220;28&amp;#8221;, &amp;#8220;31&amp;#8221;, &amp;#8220;32&amp;#8221;, &amp;#8220;40&amp;#8221;, &amp;#8220;42&amp;#8221;, &amp;#8220;36&amp;#8221;]</span>
</span></code></pre></td></tr></table></div></figure>

The API returns a `weather_icon` number for the current weather and forecast. This number appears to correspond to PNG
file from AccuWeather.com. I downloaded the full set of PNG files and included them here, but found a handful of better
looking weather webfonts out there (links below).

Related resources:

- Full accuweather icon set ([download ZIP](/assets/2015-12-08-let-it-snow-with-accuweather/images/accuweather_icons.zip))
- [Weather Icons](https://erikflowers.github.io/weather-icons/)
- [Meteocons](http://www.alessioatzeni.com/meteocons/)

Accuweather gem links:

- [Source code](https://github.com/nick-aschenbach/accuweather)
- [RubyGems.org Link](https://rubygems.org/gems/accuweather)

Stay warm out there and have fun!]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Reverse Engineering Web APIs Using Mobile Apps and a Packet Sniffer]]></title>
    <link href="http://nick-aschenbach.github.io/blog/2015/10/15/reverse-engineering-web-apis-using-mobile-apps/"/>
    <updated>2015-10-15T21:09:30-07:00</updated>
    <id>http://nick-aschenbach.github.io/blog/2015/10/15/reverse-engineering-web-apis-using-mobile-apps</id>
    <content type="html"><![CDATA[Recently I have been having fun using a packet sniffer running on my Android phone to explore non-public APIs. I will
provide a small example using the overstock.com app to look into current Flash Deals. This technique can be used to
monitor a large variety of network traffic running on the phone. The app I used also decrypts SSL packets, which is
useful for viewing HTTPS traffic.

<img src="/assets/2015-10-15-reverse-engineering-web-apis-using-mobile-apps/images/packet_capture_install.png" width="250" title="auto" >
<img src="/assets/2015-10-15-reverse-engineering-web-apis-using-mobile-apps/images/app_screen.png" width="250" title="auto" >
<img src="/assets/2015-10-15-reverse-engineering-web-apis-using-mobile-apps/images/trust_application.png" width="250" title="auto" >

First, I installed [Packet Capture](https://play.google.com/store/apps/details?id=app.greyshirts.sslcapture&hl=en) for
Android. The application requires permission to monitor network traffic when you press the `Play` button. Please do
so at your own risk. Also, this captures a large amount of data, so you might want to limit the length of time it is
running.

<img src="/assets/2015-10-15-reverse-engineering-web-apis-using-mobile-apps/images/overstock_install.png" width="250" title="auto" >
<img src="/assets/2015-10-15-reverse-engineering-web-apis-using-mobile-apps/images/overstock.png" width="250" title="auto" >
<img src="/assets/2015-10-15-reverse-engineering-web-apis-using-mobile-apps/images/packet_capture.png" width="250" title="auto" >

I downloaded the [Overstock.com](https://play.google.com/store/apps/details?id=com.overstock&hl=en) Android application,
started it and then started the packet capture. I tapped `FLASH DEALS` and then stopped the packet capture. The last
image (above right) shows the HTTP request and response that corresponded to my interaction with the application. You may
have to look through a large number of packets to identify the one of interest.

While the response is gzipped, I&#8217;m more interested in the HTTP request. The first thing I tried was a simple curl
from the command line to reproduce the application:

    $ curl http://www.overstock.com/api2/flashdeals/current?offset=0&limit=12

In some cases, you may need to use the same HTTP request headers (use the `-H &#8221;<HEADER_KEY>: <HEADER_VALUE>&#8221;` command
line option) to convince the remote HTTP server that the request was made from their application. However, this was not
needed for the Overstock.com web API. Here is a snippet of the response:

&#8220;`json
{
   &#8220;nextHref&#8221;:&#8221;&#8220;,
   &#8220;currentTime&#8221;:&#8221;2015-10-14T23:37:29.399-06:00&#8221;,
   &#8220;items&#8221;:[
      {
         &#8220;id&#8221;:30905,
         &#8220;offerType&#8221;:&#8221;FIXED_PRICE&#8221;,
         &#8220;startDateTime&#8221;:&#8221;2015-10-14T10:00:00.000-06:00&#8221;,
         &#8220;endDateTime&#8221;:&#8221;2015-10-15T10:00:00.000-06:00&#8221;,
         &#8220;storeId&#8221;:43,
         &#8220;departmentId&#8221;:454,
         &#8220;categoryId&#8221;:4540,
         &#8220;subCategoryId&#8221;:1399,
         &#8220;priority&#8221;:1,
         &#8220;skus&#8221;:[
            {
               &#8220;fixedPrice&#8221;:124.99,
               &#8220;product&#8221;:{
                  &#8220;productHref&#8221;:{
                     &#8220;id&#8221;:10181037,
                     &#8220;href&#8221;:&#8221;http://www.overstock.com/api/product.json?prod_id=10181037&#8221;
                  },
                  &#8220;productName&#8221;:&#8221;Jennifer Taylor Collection Red Moraccan Cotton 3-piece Duvet Cover Set&#8221;,
                  &#8220;images&#8221;:{
                     &#8220;thumbnail&#8221;:&#8221;http://ak1.ostkcdn.com/images/products/10181037/T17307668.jpg&#8221;,
                     &#8220;medium&#8221;:&#8221;http://ak1.ostkcdn.com/images/products/10181037/P17307668.jpg&#8221;,
                     &#8220;large&#8221;:&#8221;http://ak1.ostkcdn.com/images/products/10181037/Moracan-Collection-3-piece-Cotton-Duvet-Cover-Set-fd47bab9-10f3-49e2-a431-5ae4cf999abf_1000.jpg&#8221;
                  },
                  &#8220;pricing&#8221;:{
                     &#8220;compareType&#8221;:&#8221;MSRP&#8221;,
                     &#8220;sellingPrice&#8221;:124.99,
                     &#8220;comparePrice&#8221;:352.00,
                     &#8220;onSale&#8221;:true,
                     &#8220;discount&#8221;:227.01,
                     &#8220;savingsPercent&#8221;:64,
                     &#8220;maxPrice&#8221;:124.99,
                     &#8220;minPrice&#8221;:124.99
                  },
                  &#8220;reviewInfo&#8221;:{
                     &#8220;count&#8221;:0
                  }
               }
            }
         ]
      },
      &#8230;
&#8220;`

There was a short description, pricing information, image links in three sizes hosted on the CDN and a secondary link:

    $ curl http://www.overstock.com/api/product.json?prod_id=10181037

Here is the full response:

&#8220;`json
{
   &#8220;id&#8221;:10181037,
   &#8220;name&#8221;:&#8221;Jennifer Taylor Collection Red Moraccan Cotton 3-piece Duvet Cover Set&#8221;,
   &#8220;meta&#8221;:{
      &#8220;apiUrl&#8221;:&#8221;http://www.overstock.com/api/product.json?prod_id=10181037&#8221;,
      &#8220;htmlUrl&#8221;:&#8221;http://www.overstock.com/Bedding-Bath/Jennifer-Taylor-Collection-Red-Moraccan-Cotton-3-piece-Duvet-Cover-Set/10181037/product.html&#8221;,
      &#8220;imageBaseUrl&#8221;:&#8221;http://ak1.ostkcdn.com/images/products/&#8221;
   },
   &#8220;sku&#8221;:&#8221;17307668&#8221;,
   &#8220;imageThumbnail&#8221;:&#8221;10181037/T17307668.jpg&#8221;,
   &#8220;imageLarge&#8221;:&#8221;10181037/L17307668.jpg&#8221;,
   &#8220;imageMedium1&#8221;:&#8221;10181037/P17307668.jpg&#8221;,
   &#8220;priceSet&#8221;:[
      {
         &#8220;label&#8221;:&#8221;MSRP:&#8221;,
         &#8220;formattedPrice&#8221;:&#8221;$352.00&#8221;,
         &#8220;priceType&#8221;:&#8221;COMPARISON_PRICE&#8221;
      },
      {
         &#8220;label&#8221;:&#8221;&#8220;,
         &#8220;formattedPrice&#8221;:&#8221;$227.01(64%) off&#8221;,
         &#8220;priceType&#8221;:&#8221;DISCOUNTED_AMOUNT&#8221;
      },
      {
         &#8220;label&#8221;:&#8221;Sale:&#8221;,
         &#8220;formattedPrice&#8221;:&#8221;$124.99&#8221;,
         &#8220;priceType&#8221;:&#8221;CURRENT_PRICE&#8221;
      }
   ],
   &#8220;messages&#8221;:[
      {
         &#8220;message&#8221;:&#8221;Earn $2.50 (2%) Rewards on this product FREE with Club O Silver&#8221;,
         &#8220;messageType&#8221;:&#8221;JOIN_CLUBO_SILVER&#8221;
      }
   ],
   &#8220;oViewerImages&#8221;:[
      {
         &#8220;id&#8221;:&#8221;fd47bab9-10f3-49e2-a431-5ae4cf999abf&#8221;,
         &#8220;cdnPath&#8221;:&#8221;10181037/Moracan-Collection-3-piece-Cotton-Duvet-Cover-Set-fd47bab9-10f3-49e2-a431-5ae4cf999abf.jpg&#8221;,
         &#8220;originalWidth&#8221;:1024,
         &#8220;originalHeight&#8221;:1024,
         &#8220;imageSizes&#8221;:[
            {
               &#8220;imagePath&#8221;:&#8221;10181037/Moracan-Collection-3-piece-Cotton-Duvet-Cover-Set-fd47bab9-10f3-49e2-a431-5ae4cf999abf_320.jpg&#8221;,
               &#8220;height&#8221;:320,
               &#8220;width&#8221;:320
            },
            {
               &#8220;imagePath&#8221;:&#8221;10181037/Moracan-Collection-3-piece-Cotton-Duvet-Cover-Set-fd47bab9-10f3-49e2-a431-5ae4cf999abf_600.jpg&#8221;,
               &#8220;height&#8221;:600,
               &#8220;width&#8221;:600
            },
            {
               &#8220;imagePath&#8221;:&#8221;10181037/Moracan-Collection-3-piece-Cotton-Duvet-Cover-Set-fd47bab9-10f3-49e2-a431-5ae4cf999abf_1000.jpg&#8221;,
               &#8220;height&#8221;:1000,
               &#8220;width&#8221;:1000
            }
         ]
      }
   ],
   &#8220;memberPrice&#8221;:124.99,
   &#8220;compareAt&#8221;:250.27,
   &#8220;categoryId&#8221;:4540,
   &#8220;subCategoryId&#8221;:1399,
   &#8220;altSubCategoryId&#8221;:22240,
   &#8220;shortDescription&#8221;:&#8221;This Moracan Collection duvet set is woven of 100 percent cotton for softness and comfort. Rich blues and oranges in a geometric pattern complete the look. &#8220;,
   &#8220;description&#8221;:&#8221;This reversible duvet cover features a blue and orange geometric design on one side and a solid blue on the other. Crafted of quality cotton, this set is conveniently machine washable.<br><br><ul><li>Includes: 3-piece Set</li><li>Reversible Bedding</li><li>Material: Cotton</li><li>Pattern: Graphic</li><li>Color: Red, Orange, Blue</li><br><br><b>Queen-size dimensions:</b><li>Duvet: 93 inches x 96 inches</li><li>Standard sham: 20 inches x 27 inches</li></ul><br><i>The digital images we display have the most accurate color possible. However, due to differences in computer monitors, we cannot be responsible for variations in color between the actual product and your screen.</i><br>&#8221;,
   &#8220;savingsPercentage&#8221;:50,
   &#8220;basePrice&#8221;:124.99,
   &#8220;hideMAPProductPrice&#8221;:false,
   &#8220;mediaItem&#8221;:false,
   &#8220;mediaReleaseDate&#8221;:&#8221;&#8220;,
   &#8220;clubODiscount&#8221;:false,
   &#8220;nonClubODiscount&#8221;:true,
   &#8220;preRelease&#8221;:false,
   &#8220;priceLabel&#8221;:&#8221;Sale&#8221;,
   &#8220;online&#8221;:true,
   &#8220;options&#8221;:[
      {
         &#8220;optionId&#8221;:15463578,
         &#8220;decription&#8221;:&#8221;N/A&#8221;,
         &#8220;qtyOnHand&#8221;:31,
         &#8220;maxQuantityAllowed&#8221;:20,
         &#8220;price&#8221;:124.99,
         &#8220;comparePrice&#8221;:352.00,
         &#8220;compareType&#8221;:&#8221;MSRP&#8221;,
         &#8220;hideMAPProductPrice&#8221;:false,
         &#8220;savings&#8221;:227.01,
         &#8220;savingPercentage&#8221;:64,
         &#8220;onSale&#8221;:true,
         &#8220;showAmazonPrice&#8221;:false,
         &#8220;priceSet&#8221;:[
            {
               &#8220;label&#8221;:&#8221;MSRP:&#8221;,
               &#8220;formattedPrice&#8221;:&#8221;$352.00&#8221;,
               &#8220;priceType&#8221;:&#8221;COMPARISON_PRICE&#8221;
            },
            {
               &#8220;label&#8221;:&#8221;&#8220;,
               &#8220;formattedPrice&#8221;:&#8221;$227.01(64%) off&#8221;,
               &#8220;priceType&#8221;:&#8221;DISCOUNTED_AMOUNT&#8221;
            },
            {
               &#8220;label&#8221;:&#8221;Sale:&#8221;,
               &#8220;formattedPrice&#8221;:&#8221;$124.99&#8221;,
               &#8220;priceType&#8221;:&#8221;CURRENT_PRICE&#8221;
            }
         ]
      }
   ],
   &#8220;warranties&#8221;:[

   ],
   &#8220;flashDeal&#8221;:{
      &#8220;id&#8221;:30905,
      &#8220;href&#8221;:&#8221;http://www.overstock.com/api2/flashdeals/30905&#8221;,
      &#8220;currentTime&#8221;:&#8221;2015-10-14T23:43:20.413-06:00&#8221;,
      &#8220;startDateTime&#8221;:&#8221;2015-10-14T10:00:00.000-06:00&#8221;,
      &#8220;endDateTime&#8221;:&#8221;2015-10-15T10:00:00.000-06:00&#8221;
   },
   &#8220;shipDeliveryEstimates&#8221;:{
      &#8220;optionId&#8221;:15463578,
      &#8220;productType&#8221;:&#8221;REGULAR&#8221;
   },
   &#8220;taxonomy&#8221;:{
      &#8220;store&#8221;:{
         &#8220;id&#8221;:43,
         &#8220;name&#8221;:&#8221;Bedding & Bath&#8221;,
         &#8220;apiUrl&#8221;:&#8221;http://www.overstock.com/api/search.json?taxonomy=sto43&#8221;,
         &#8220;htmlUrl&#8221;:&#8221;http://www.overstock.com/Bedding-Bath/43/store.html&#8221;
      },
      &#8220;department&#8221;:{
         &#8220;id&#8221;:454,
         &#8220;name&#8221;:&#8221;Fashion Bedding&#8221;,
         &#8220;apiUrl&#8221;:&#8221;http://www.overstock.com/api/search.json?taxonomy=dep454&#8221;,
         &#8220;htmlUrl&#8221;:&#8221;http://www.overstock.com/Bedding-Bath/Fashion-Bedding/454/dept.html&#8221;
      },
      &#8220;category&#8221;:{
         &#8220;id&#8221;:4540,
         &#8220;name&#8221;:&#8221;Duvet Covers&#8221;,
         &#8220;apiUrl&#8221;:&#8221;http://www.overstock.com/api/search.json?taxonomy=cat4540&#8221;,
         &#8220;htmlUrl&#8221;:&#8221;http://www.overstock.com/Bedding-Bath/Duvet-Covers/4540/cat.html&#8221;
      },
      &#8220;subCategory&#8221;:{
         &#8220;id&#8221;:1399,
         &#8220;name&#8221;:&#8221;Duvet Covers&#8221;,
         &#8220;apiUrl&#8221;:&#8221;http://www.overstock.com/api/search.json?taxonomy=sto1399&#8221;,
         &#8220;htmlUrl&#8221;:&#8221;http://www.overstock.com/Bedding-Bath/Duvet-Covers/4540/cat.html&#8221;
      }
   },
   &#8220;originalOptionCount&#8221;:1
}
&#8220;`]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Renumber Filenames Sequentially]]></title>
    <link href="http://nick-aschenbach.github.io/blog/2015/06/17/renumber-gem/"/>
    <updated>2015-06-17T20:07:04-07:00</updated>
    <id>http://nick-aschenbach.github.io/blog/2015/06/17/renumber-gem</id>
    <content type="html"><![CDATA[`renumber` is a small command line utility that renames files in a single directory. Files are sorted in
lexicographic order and then renamed with sequential numbers. It is possible to specify a prefix and suffix - these are
optional parameters. There are a couple of examples of usage below.

The code is open source and available on [GitHub](https://github.com/nick-aschenbach/renumber).

**Command Line Usage**

    $ renumber <directory> <prefix> <suffix>

<!-- more -->

**Installation**

The tool requires that Ruby is installed. If so, install `renumber` with the following command:

    $ gem install renumber

**Use case**

I developed `renumber` so that I could renumber thousands images from a digital camera for use in a time lapse movie.
The tool I used to stitch these images together into a movie (called [ffmpeg](https://www.ffmpeg.org/)) died if the file
names had a gap (e.g. &#8230;, IMG2047, IMG2049, IMG2050, &#8230;).

The `renumber` tool solved this problem by renumbering the files to not have gaps.

**Simple Usage**

Let&#8217;s take a directory with several non-sequential files:

&#8220;`
drwxr-xr-x  15 troy  staff  510 Jun 17 20:12 .
drwx&#8212;&#8212;+  7 troy  staff  238 Jun 17 20:06 ..
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 03.txt
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 04.txt
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 07.txt
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 09.txt
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 10.txt
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 11.txt
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 13.txt
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 15.txt
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 17.txt
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 19.txt
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 20.txt
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 22.txt
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 99.txt
&#8220;`

Let&#8217;s change to that directory and run the following:

    $ renumber .

Here&#8217;s the directory listing after running the command:

&#8220;`
drwxr-xr-x  15 troy  staff  510 Jun 17 20:14 .
drwx&#8212;&#8212;+  7 troy  staff  238 Jun 17 20:06 ..
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 00
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 01
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 02
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 03
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 04
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 05
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 06
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 07
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 08
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 09
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 10
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 11
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:12 12
&#8220;`

**Prefix and Suffix**

Let&#8217;s take the same initial file list as the above example. Let&#8217;s add a prefix and suffix:

    $ renumber . foo .text

Here&#8217;s the directory listing after running the command:

&#8220;`
drwxr-xr-x  15 troy  staff  510 Jun 17 20:17 .
drwx&#8212;&#8212;+  7 troy  staff  238 Jun 17 20:06 ..
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:16 foo00.text
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:16 foo01.text
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:16 foo02.text
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:16 foo03.text
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:16 foo04.text
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:16 foo05.text
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:16 foo06.text
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:16 foo07.text
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:16 foo08.text
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:16 foo09.text
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:16 foo10.text
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:16 foo11.text
-rw-r&#8211;r&#8211;   1 troy  staff    3 Jun 17 20:16 foo12.text
&#8220;`]]></content>
  </entry>
  
</feed>
